/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../app/library/grid.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/view_container';
import * as import9 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import10 from '@angular/core/src/linker/template_ref';
import * as import11 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from '../../../app/library/cell.component';
import * as import14 from './cell.component.ngfactory';
import * as import15 from '@angular/core/src/linker/component_factory_resolver';
export var Wrapper_Grid = (function () {
    function Wrapper_Grid() {
        this._changed = false;
        this.context = new import0.Grid();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_Grid.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Grid.prototype.ngOnDestroy = function () {
    };
    Wrapper_Grid.prototype.check_componentTypes = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.componentTypes = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Grid.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_Grid.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_Grid.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Grid.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_Grid;
}());
var renderType_Grid_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Grid_Host0 = (function (_super) {
    __extends(View_Grid_Host0, _super);
    function View_Grid_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Grid_Host0, renderType_Grid_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Grid_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'grid-component', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_Grid0(this.viewUtils, this, 0, this._el_0);
        this._Grid_0_3 = new Wrapper_Grid();
        this.compView_0.create(this._Grid_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._Grid_0_3.context);
    };
    View_Grid_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Grid) && (0 === requestNodeIndex))) {
            return this._Grid_0_3.context;
        }
        return notFoundResult;
    };
    View_Grid_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Grid_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Grid_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_Grid_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_Grid_Host0;
}(import2.AppView));
export var GridNgFactory = new import7.ComponentFactory('grid-component', View_Grid_Host0, import0.Grid);
var styles_Grid = [];
var renderType_Grid = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_Grid, {});
export var View_Grid0 = (function (_super) {
    __extends(View_Grid0, _super);
    function View_Grid0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Grid0, renderType_Grid, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Grid0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n        ', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import8.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import10.TemplateRef_(this, 1, this._anchor_1);
        this._NgFor_1_6 = new import9.Wrapper_NgFor(this._vc_1.vcRef, this._TemplateRef_1_5, this.parentView.injectorGet(import11.IterableDiffers, this.parentIndex), this.ref);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._anchor_1,
            this._text_2
        ]), null);
        return null;
    };
    View_Grid0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import12.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6.context;
        }
        return notFoundResult;
    };
    View_Grid0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this.context.cellComponentTypes;
        this._NgFor_1_6.check_ngForOf(currVal_1_0_0, throwOnChange, false);
        this._NgFor_1_6.ngDoCheck(this, this._anchor_1, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
    };
    View_Grid0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
    };
    View_Grid0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_Grid1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        return null;
    };
    return View_Grid0;
}(import2.AppView));
var View_Grid1 = (function (_super) {
    __extends(View_Grid1, _super);
    function View_Grid1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_Grid1, renderType_Grid, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_Grid1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'row'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n            ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'col-lg-12'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n                ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'grid-cell', import3.EMPTY_INLINE_ARRAY, null);
        this._vc_4 = new import8.ViewContainer(4, 2, this, this._el_4);
        this.compView_4 = new import14.View_Cell0(this.viewUtils, this, 4, this._el_4);
        this._Cell_4_5 = new import14.Wrapper_Cell(this._vc_4.vcRef, this.parentView.injectorGet(import15.ComponentFactoryResolver, this.parentIndex));
        this.compView_4.create(this._Cell_4_5.context);
        this._text_5 = this.renderer.createText(this._el_2, '\n            ', null);
        this._text_6 = this.renderer.createText(this._el_0, '\n        ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6
        ]), null);
        return null;
    };
    View_Grid1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.Cell) && (4 === requestNodeIndex))) {
            return this._Cell_4_5.context;
        }
        return notFoundResult;
    };
    View_Grid1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_4_0_0 = this.context.$implicit;
        this._Cell_4_5.check_componentType(currVal_4_0_0, throwOnChange, false);
        this._Cell_4_5.ngDoCheck(this, this._el_4, throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
        this.compView_4.detectChanges(throwOnChange);
    };
    View_Grid1.prototype.destroyInternal = function () {
        this._vc_4.destroyNestedViews();
        this.compView_4.destroy();
    };
    View_Grid1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_Grid1;
}(import2.AppView));
//# sourceMappingURL=grid.component.ngfactory.js.map