/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../app/library/cell.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_container';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/component_factory_resolver';
export var Wrapper_Cell = (function () {
    function Wrapper_Cell(p0, p1) {
        this._changed = false;
        this.context = new import0.Cell(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_Cell.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Cell.prototype.ngOnDestroy = function () {
    };
    Wrapper_Cell.prototype.check_componentType = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.componentType = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Cell.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_Cell.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_Cell.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Cell.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_Cell;
}());
var renderType_Cell_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Cell_Host0 = (function (_super) {
    __extends(View_Cell_Host0, _super);
    function View_Cell_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Cell_Host0, renderType_Cell_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Cell_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'grid-cell', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._vc_0 = new import6.ViewContainer(0, null, this, this._el_0);
        this.compView_0 = new View_Cell0(this.viewUtils, this, 0, this._el_0);
        this._Cell_0_5 = new Wrapper_Cell(this._vc_0.vcRef, this.injectorGet(import9.ComponentFactoryResolver, this.parentIndex));
        this.compView_0.create(this._Cell_0_5.context);
        this._el_1 = this.renderer.createTemplateAnchor(null, null);
        this.init(this._el_1, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._Cell_0_5.context);
    };
    View_Cell_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Cell) && (0 === requestNodeIndex))) {
            return this._Cell_0_5.context;
        }
        return notFoundResult;
    };
    View_Cell_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Cell_0_5.ngDoCheck(this, this._el_0, throwOnChange);
        this._vc_0.detectChangesInNestedViews(throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Cell_Host0.prototype.destroyInternal = function () {
        this._vc_0.destroyNestedViews();
        this.compView_0.destroy();
    };
    View_Cell_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._vc_0.nativeElement, ctx);
        this._vc_0.visitNestedViewRootNodes(cb, ctx);
        cb(this._el_1, ctx);
    };
    return View_Cell_Host0;
}(import2.AppView));
export var CellNgFactory = new import8.ComponentFactory('grid-cell', View_Cell_Host0, import0.Cell);
var styles_Cell = [];
var renderType_Cell = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_Cell, {});
export var View_Cell0 = (function (_super) {
    __extends(View_Cell0, _super);
    function View_Cell0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Cell0, renderType_Cell, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Cell0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this.init(null, (this.renderer.directRenderer ? null : []), null);
        return null;
    };
    return View_Cell0;
}(import2.AppView));
//# sourceMappingURL=cell.component.ngfactory.js.map