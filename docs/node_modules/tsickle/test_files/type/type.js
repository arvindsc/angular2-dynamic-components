var typeAny;
var typeArr = null;
var typeArr2 = null;
var typeNestedArr = null;
var typeObject = { a: 3, b: 'b' };
var typeObject2 = null;
var typeObject3 = null;
var typeObjectEmpty = null;
var typeUnion = Math.random() > 0.5 ? false : '';
var typeUnion2 = Math.random() > 0.5 ? false : '';
var typeOptionalField = {};
var typeOptionalUnion = {};
var typeFunc = function () { };
var typeFunc2 = function (a, b) { return ''; };
var typeFunc3 = function (x, cb) { return ''; };
// TODO: let typeFunc4: (a: number, ...args: number[]) => void;
function typeCallback(callback) { }
typeCallback(function (val) { return val + 1; });
function typeGenericCallback(callback) { }
typeGenericCallback(function (val) { return val; });
//# sourceMappingURL=type.js.map