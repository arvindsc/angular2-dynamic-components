var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Base = (function () {
    function Base() {
    }
    /**
     * @abstract
     * @return {void}
     */
    Base.prototype.simple = function () { };
    /**
     * @abstract
     * @return {void}
     */
    Base.prototype.publicAbstract = function () { };
    /**
     * @abstract
     * @param {Array<number>} x
     * @return {void}
     */
    Base.prototype.params = function (x) { };
    /**
     * @abstract
     * @return {?}
     */
    Base.prototype.noReturnType = function () { };
    /**
     * @abstract
     * @return {number}
     */
    Base.prototype.hasReturnType = function () { };
    /**
     * @return {void}
     */
    Base.prototype.bar = function () {
        this.simple();
        this.publicAbstract();
        this.params([]);
        this.noReturnType();
        this.hasReturnType();
    };
    return Base;
}());
var Derived = (function (_super) {
    __extends(Derived, _super);
    /**
     */
    function Derived() {
        _super.call(this);
    }
    /**
     * @return {void}
     */
    Derived.prototype.simple = function () { };
    /**
     * @return {void}
     */
    Derived.prototype.publicAbstract = function () { };
    /**
     * @param {Array<number>} x
     * @return {void}
     */
    Derived.prototype.params = function (x) { };
    /**
     * @return {void}
     */
    Derived.prototype.noReturnType = function () { };
    /**
     * @return {number}
     */
    Derived.prototype.hasReturnType = function () { return 3; };
    return Derived;
}(Base));
var /** @type {Base} */ x = new Derived();
//# sourceMappingURL=abstract.tsickle.js.map