/**
 * This test tests importing a type across module boundaries,
 * ensuring that the type gets the proper name in JSDoc comments.
 */
"use strict";
var module1 = require('./module1');
var module2_1 = require('./module2');
var module2_2 = require('./module2');
var module2_3 = require('./module2');
var default_1 = require('./default');
// Check that imported types get the proper names in JSDoc.
var useNamespacedClass = new module1.Class();
var useNamespacedClassAsType = null;
var useNamespacedType = null;
// Should be references to the symbols in module2, perhaps via locals.
var useLocalClass = new module2_1.ClassOne();
var useLocalClassRenamed = new module2_2.ClassOne();
var useLocalClassRenamedTwo = new module2_3.ClassTwo();
var useLocalClassAsTypeRenamed = null;
var useLocalInterface = null;
var useClassWithParams = null;
// This is purely a value; it doesn't need renaming.
var useLocalValue = module2_1.value;
// Check a default import.
var useDefaultClass = new default_1.default();
var useDefaultClassAsType = null;
// NeverTyped should be {?}, even in typed mode.
var useNeverTyped = null;
var useNeverTyped2 = null;
//# sourceMappingURL=jsdoc_types.js.map