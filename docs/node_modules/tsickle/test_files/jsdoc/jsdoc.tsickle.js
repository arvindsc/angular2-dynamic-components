Warning;
at;
test_files / jsdoc / jsdoc.ts;
16;
1;
{ }
are;
redundant;
with (TypeScript)
    types;
Warning;
at;
test_files / jsdoc / jsdoc.ts;
25;
3;
{ }
are;
redundant;
with (TypeScript)
    types;
Warning;
at;
test_files / jsdoc / jsdoc.ts;
30;
3;
annotations;
are;
redundant;
with (TypeScript)
    equivalents
        === ;
/**
 * @param {string} foo a string.
 * @param {string} baz
 * @return {string} return comment.
 */
function jsDocTestFunction(foo, baz) {
    return foo;
}
/**
 * @return {string} return comment in a "@returns" block.
 */
function returnsTest() {
    return 'abc';
}
/**
 * @param {string} foo
 * @return {void}
 */
function jsDocTestBadDoc(foo) { }
var JSDocTest = (function () {
    function JSDocTest() {
    }
    JSDocTest._tsickle_typeAnnotationsHelper = function () {
        /** @export
        @type {string} */
        JSDocTest.prototype.exported;
        /** @type {string} */
        JSDocTest.prototype.badExport;
        /** @type {string} */
        JSDocTest.prototype.stringWithoutJSDoc;
        /** @type {number} */
        JSDocTest.prototype.typedThing;
    };
    return JSDocTest;
}());
/**
 * @see This tag will be kept, because Closure allows it.
 * @return {void}
 */
function x() { }
;
//# sourceMappingURL=jsdoc.tsickle.js.map