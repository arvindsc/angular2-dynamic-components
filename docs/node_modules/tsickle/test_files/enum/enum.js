"use strict";
// Line with a missing semicolon should not break the following enum.
var EnumTestMissingSemi = [];
var EnumTest1;
(function (EnumTest1) {
    EnumTest1[EnumTest1["XYZ"] = 0] = "XYZ";
    EnumTest1[EnumTest1["PI"] = 3.14159] = "PI";
})(EnumTest1 || (EnumTest1 = {}));
// Tsickle rewrites the above "enum" declaration into just a plain
// number.  Verify that the resulting TypeScript still allows you to
// index into the enum with all the various ways allowed of enums.
var enumTestValue = EnumTest1.XYZ;
var enumTestValue2 = EnumTest1['XYZ'];
var enumNumIndex = EnumTest1[null];
var enumStrIndex = EnumTest1[null];
function enumTestFunction(val) { }
enumTestFunction(enumTestValue);
var enumTestLookup = EnumTest1["XYZ"];
// This additional exported enum is here to exercise the fix for issue #51.
(function (EnumTest2) {
    EnumTest2[EnumTest2["XYZ"] = 0] = "XYZ";
    EnumTest2[EnumTest2["PI"] = 3.14159] = "PI";
})(exports.EnumTest2 || (exports.EnumTest2 = {}));
var EnumTest2 = exports.EnumTest2;
// Repro for #97
var ComponentIndex;
(function (ComponentIndex) {
    ComponentIndex[ComponentIndex["Scheme"] = 1] = "Scheme";
    ComponentIndex[ComponentIndex["UserInfo"] = 2] = "UserInfo";
    ComponentIndex[ComponentIndex["Domain"] = 0] = "Domain";
    ComponentIndex[ComponentIndex["UserInfo2"] = 2] = "UserInfo2";
})(ComponentIndex || (ComponentIndex = {}));
var enumTestDisappears = 0 /* ShouldNotHaveAnyTsickleOutput */;
// One place where enums with non-constant values make sense is when
// you are exporting a Closure value into a TypeScript namespace:
//   import Foo from 'goog:bar.baz';
//   export enum MyEnum { MyFoo = Foo }
// However, just immediately evaluating an arrow expression as done here
// is sufficient to trigger the non-constant value code path that we're
// testing with this block.
var EnumWithNonConstValues;
(function (EnumWithNonConstValues) {
    EnumWithNonConstValues[EnumWithNonConstValues["Scheme"] = (function (x) { return x + 1; })(3)] = "Scheme";
    EnumWithNonConstValues[EnumWithNonConstValues["UserInfoRenamed"] = 2] = "UserInfoRenamed";
})(EnumWithNonConstValues || (EnumWithNonConstValues = {}));
//# sourceMappingURL=enum.js.map