"use strict";
var conflict = require('./module');
// This test deals with symbols that are simultaneously types and values.
// Use a browser built-in as both a type and a value.
var useBuiltInAsValue = Document;
var useBuiltInAsType = null;
// Use a user-defined class as both a type and a value.
var useUserClassAsValue = conflict.Class;
var useUserClassAsType = null;
// Use a user-defined interface/value pair as both a type and a value.
var useAsValue = conflict.TypeAndValue;
// Note: because of the conflict, we currently just use the type {?} here.
var useAsType = null;
//# sourceMappingURL=type_and_value.js.map