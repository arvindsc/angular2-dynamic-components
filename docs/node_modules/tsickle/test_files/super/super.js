var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var SuperTestBaseNoArg = (function () {
    function SuperTestBaseNoArg() {
    }
    return SuperTestBaseNoArg;
}());
var SuperTestBaseOneArg = (function () {
    function SuperTestBaseOneArg(x) {
        this.x = x;
    }
    return SuperTestBaseOneArg;
}());
// A ctor with a parameter property.
var SuperTestDerivedParamProps = (function (_super) {
    __extends(SuperTestDerivedParamProps, _super);
    function SuperTestDerivedParamProps(y) {
        _super.call(this, 3);
        this.y = y;
    }
    return SuperTestDerivedParamProps;
}(SuperTestBaseOneArg));
// A ctor with an initialized property.
var SuperTestDerivedInitializedProps = (function (_super) {
    __extends(SuperTestDerivedInitializedProps, _super);
    function SuperTestDerivedInitializedProps() {
        _super.call(this, 3);
        this.y = 'foo';
    }
    return SuperTestDerivedInitializedProps;
}(SuperTestBaseOneArg));
// A ctor with a super() but none of the above two details.
var SuperTestDerivedOrdinary = (function (_super) {
    __extends(SuperTestDerivedOrdinary, _super);
    function SuperTestDerivedOrdinary() {
        _super.call(this, 3);
    }
    return SuperTestDerivedOrdinary;
}(SuperTestBaseOneArg));
// A class without a ctor, extending a one-arg ctor parent.
var SuperTestDerivedNoCTorNoArg = (function (_super) {
    __extends(SuperTestDerivedNoCTorNoArg, _super);
    function SuperTestDerivedNoCTorNoArg() {
        _super.apply(this, arguments);
    }
    return SuperTestDerivedNoCTorNoArg;
}(SuperTestBaseNoArg));
// A class without a ctor, extending a no-arg ctor parent.
var SuperTestDerivedNoCTorOneArg = (function (_super) {
    __extends(SuperTestDerivedNoCTorOneArg, _super);
    function SuperTestDerivedNoCTorOneArg() {
        _super.apply(this, arguments);
    }
    return SuperTestDerivedNoCTorOneArg;
}(SuperTestBaseOneArg));
// A class implementing an interface.
var SuperTestDerivedInterface = (function () {
    function SuperTestDerivedInterface() {
    }
    return SuperTestDerivedInterface;
}());
var SuperTestStaticProp = (function (_super) {
    __extends(SuperTestStaticProp, _super);
    function SuperTestStaticProp() {
        _super.apply(this, arguments);
    }
    SuperTestStaticProp.foo = 3;
    return SuperTestStaticProp;
}(SuperTestBaseOneArg));
//# sourceMappingURL=super.js.map